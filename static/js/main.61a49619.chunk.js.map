{"version":3,"sources":["components/Weather/DailyDetails.tsx","components/Weather/Daily.tsx","components/Weather/DailyContainer.tsx","components/Weather/DailyDetailsContainer.tsx","store/weather-context.tsx","api/OpenWeatherClient.tsx","components/Weather/Header.tsx","components/Weather/Hourly.tsx","components/Weather/HourlyContainer.tsx","components/Weather/TemperatureConditions.tsx","pages/WeatherPage.tsx","components/Home/Title.tsx","components/Home/SearchInputAutocomplete.tsx","components/Home/SearchButton.tsx","components/Home/UseMyLocationButton.tsx","components/Home/Search.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","allCaps","textTransform","container","backgroundColor","color","padding","height","paddingTop","DailyDetails","description","feelsLike","windSpeed","humidity","uvi","sunrise","sunset","classes","Grid","direction","justifyContent","className","item","Typography","variant","Box","component","fontWeight","Math","round","moment","unix","format","day","active","Daily","timestamp","Date","now","temp","alignItems","pointer","cursor","DailyContainer","daily","selectDayHandler","activeDayIndex","map","index","dt","onClick","e","DailyDetailsContainer","useState","activeDay","setActiveDay","setActiveDayIndex","xs","event","weather","main","feels_like","wind_speed","weatherClient","key","city","country","this","lon","lat","a","api","getCityAndCountryByCoords","fetch","response","json","data","name","coord","current","max","min","icon","hourly","hourlyEveryOtherHourLimitTo","cityId","getCoordsForCityById","getWeatherForCityByCoords","countryCode","sys","numberOfHours","limitedHourly","everyOtherPointer","i","push","WeatherContext","createContext","setSelectedCityId","setWeatherData","weatherData","setLoadingData","status","clearState","WeatherContextProvider","props","selectedCityId","loadingData","context","undefined","Provider","value","children","marginTop","marginLeft","Header","history","useHistory","weatherCtx","useContext","IconButton","Search","fontSize","Hourly","time","condition","src","alt","width","HourlyContainer","hour","TemperatureConditions","high","low","conditions","spacing","align","Title","theme","palette","text","secondary","marginRight","loading","SearchInputAutocomplete","inputValue","setInputValue","options","setOptions","setLoading","getAutoSuggestionData","request","window","input","then","res","newOptions","_embedded","fetchSuggestions","useMemo","throttle","React","useEffect","length","Autocomplete","style","getOptionLabel","option","matching_full_name","onChange","newValue","_links","href","split","replace","onInputChange","newInputValue","renderInput","params","TextField","label","fullWidth","InputProps","endAdornment","Fragment","CircularProgress","thickness","size","renderOption","SearchButton","Button","type","disableElevation","disabled","getWeatherForCityById","endIcon","UseMyLocationButton","MyLocation","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","createStyles","grid","backdrop","zIndex","drawer","backdropGridItem","routes","path","Component","alignContent","Backdrop","open","mt","wrap","to","pathname","App","Container","disableGutters","basename","process","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","md","lg","boxShadow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61a49619.chunk.js","sourcesContent":["import { Box, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n\tallCaps: {\n\t\ttextTransform: \"uppercase\",\n\t},\n\tcontainer: {\n\t\tbackgroundColor: \"#3f50b5\",\n\t\tcolor: \"white\",\n\t\tpadding: \"1rem 2rem\",\n\t\theight: \"100%\",\n\t\tpaddingTop: \"1.45rem\",\n\t},\n});\nexport default function DailyDetails({ description, feelsLike, windSpeed, humidity, uvi, sunrise, sunset }: any) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container direction=\"column\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t<Box component=\"span\" className={classes.allCaps} fontWeight=\"400\">\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tFeels like\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{Math.round(feelsLike)}\n\t\t\t\t\t\t<span>&#176;</span>F\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tSunrise\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{moment.unix(sunrise).format(\"hh:mm a\")}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tSunset\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{moment.unix(sunset).format(\"hh:mm a\")}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tHumidity\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{humidity}%\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tWind speed\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{windSpeed} mp/h\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tUVI\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{uvi}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\ninterface IDailyProps {\n\tactive?: boolean;\n\ttimestamp?: number;\n\ttemp: number;\n}\n\nconst useStyles = makeStyles({\n\tday: {\n\t\tpadding: \"1rem 2rem\",\n\t\tbackgroundColor: (active) => (active ? \"#3f50b5\" : \"\"),\n\t\tcolor: (active) => (active ? \"white\" : \"black\"),\n\t},\n\tallCaps: {\n\t\ttextTransform: \"uppercase\",\n\t},\n});\nexport default function Daily({ active = false, timestamp = Date.now(), temp }: IDailyProps) {\n\tconst classes = useStyles(active);\n\treturn (\n\t\t<Grid container justifyContent=\"space-between\" alignItems=\"center\" className={classes.day}>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t<Box component=\"span\" className={classes.allCaps} fontWeight=\"400\">\n\t\t\t\t\t\t\t\t{moment.unix(timestamp).format(\"ddd\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t<Box component=\"span\" className={classes.allCaps}>\n\t\t\t\t\t\t\t\t{moment.unix(timestamp).format(\"D MMM\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t{Math.round(temp)}\n\t\t\t\t\t<span>&#176;</span>F\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport { DailyWeather } from \"../../api/OpenWeatherClient\";\nimport Daily from \"./Daily\";\n\nconst useStyles = makeStyles({\n\tpointer: {\n\t\tcursor: \"pointer\",\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: \"#dee3ff\",\n\t\t},\n\t},\n});\n\nexport default function DailyContainer({\n\tdaily,\n\tselectDayHandler,\n\tactiveDayIndex,\n}: {\n\tdaily: DailyWeather[];\n\tselectDayHandler: any;\n\tactiveDayIndex: number;\n}) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t{daily.map(({ dt, temp }, index) => (\n\t\t\t\t<Grid item className={classes.pointer} onClick={(e) => selectDayHandler(e, index)} key={dt}>\n\t\t\t\t\t<Daily active={activeDayIndex === index} timestamp={dt} temp={temp.day} />\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n","import { Grid } from \"@material-ui/core\";\nimport DailyDetails from \"./DailyDetails\";\nimport DailyContainer from \"./DailyContainer\";\nimport { DailyWeather } from \"../../api/OpenWeatherClient\";\nimport { useState } from \"react\";\n\nexport default function DailyDetailsContainer({ daily }: { daily: DailyWeather[] }) {\n\tconst [activeDay, setActiveDay] = useState(daily[0]);\n\tconst [activeDayIndex, setActiveDayIndex] = useState(0);\n\tconst selectDayHandler = (event: any, index: number) => {\n\t\tsetActiveDay(daily[index]);\n\t\tsetActiveDayIndex(index);\n\t};\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<DailyContainer activeDayIndex={activeDayIndex} selectDayHandler={selectDayHandler} daily={daily} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<DailyDetails\n\t\t\t\t\tsunrise={activeDay?.sunrise}\n\t\t\t\t\tsunset={activeDay?.sunset}\n\t\t\t\t\tdescription={activeDay?.weather[0].main}\n\t\t\t\t\tfeelsLike={activeDay?.feels_like.day}\n\t\t\t\t\tuvi={activeDay?.uvi}\n\t\t\t\t\thumidity={activeDay?.humidity}\n\t\t\t\t\twindSpeed={activeDay?.wind_speed}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Context, ReactNode, useState } from \"react\";\nimport { createContext } from \"react\";\nimport OpenWeatherClient, { IWeather } from \"../api/OpenWeatherClient\";\n\nconst weatherClient = new OpenWeatherClient(\"a3345aba730886077c25b145c5518740\");\n\nconst WeatherContext: Context<{\n\tweatherClient: OpenWeatherClient;\n\tloadingData?: boolean;\n\tweatherData?: IWeather;\n\tselectedCityId?: string;\n\tsetLoadingData: (status: boolean) => void;\n\tsetSelectedCityId: (cityId?: string) => void;\n\tsetWeatherData: (weatherData: IWeather) => void;\n\tclearState: () => void;\n}> = createContext({\n\tweatherClient,\n\tsetSelectedCityId: (cityId) => {},\n\tsetWeatherData: (weatherData) => {},\n\tsetLoadingData: (status) => {},\n\tclearState: () => {},\n});\n\nexport function WeatherContextProvider(props: { children: ReactNode }) {\n\tconst [weatherData, setWeatherData] = useState<IWeather>();\n\tconst [selectedCityId, setSelectedCityId] = useState<string>();\n\tconst [loadingData, setLoadingData] = useState(false);\n\n\tconst setLoadingDataHandler = (status: boolean) => setLoadingData(status);\n\n\tconst setSelectedCityIdHandler = (cityId?: string) => setSelectedCityId(cityId);\n\n\tconst setWeatherDataHandler = (weatherData: IWeather) => {\n\t\tsetWeatherData(weatherData);\n\t};\n\n\tconst clearStateHandler = () => {\n\t\tsetLoadingData(false);\n\t\tsetSelectedCityId(undefined);\n\t\tsetWeatherData(undefined);\n\t};\n\n\tconst context = {\n\t\tloadingData,\n\t\tweatherClient,\n\t\tweatherData,\n\t\tselectedCityId,\n\t\tsetLoadingData: setLoadingDataHandler,\n\t\tsetSelectedCityId: setSelectedCityIdHandler,\n\t\tsetWeatherData: setWeatherDataHandler,\n\t\tclearState: clearStateHandler,\n\t};\n\n\treturn <WeatherContext.Provider value={context}>{props.children}</WeatherContext.Provider>;\n}\n\nexport default WeatherContext;\n","export default class OpenWeatherClient {\n\tkey: string;\n\tcity: string = \"\";\n\tcountry: string = \"\";\n\n\tconstructor(key: string) {\n\t\tthis.key = key;\n\t}\n\n\tasync getWeatherForCityByCoords(lon: number, lat: number): Promise<IWeather> {\n\t\tconst api = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&&appid=${this.key}&units=imperial`;\n\n\t\tthis.getCityAndCountryByCoords(lon, lat);\n\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst data = await response.json();\n\t\t\treturn {\n\t\t\t\tname: `${this.city}, ${this.country}`,\n\t\t\t\tcoord: {\n\t\t\t\t\tlat: data.lat,\n\t\t\t\t\tlon: data.lon,\n\t\t\t\t},\n\t\t\t\tcurrent: {\n\t\t\t\t\tmax: Math.round(data.daily[0].temp.max),\n\t\t\t\t\tmin: Math.round(data.daily[0].temp.min),\n\t\t\t\t\ttimestamp: data.current.dt,\n\t\t\t\t\ttemp: Math.round(data.current.temp),\n\t\t\t\t\tweather: {\n\t\t\t\t\t\tdescription: data.current.weather[0].description,\n\t\t\t\t\t\ticon: `assets/${data.current.weather[0].icon}@4x.png`,\n\t\t\t\t\t\tmain: data.current.weather[0].main,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thourly: this.hourlyEveryOtherHourLimitTo(data.hourly, 5),\n\t\t\t\tdaily: data.daily,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync getWeatherForCityById(cityId: string): Promise<IWeather> {\n\t\tconst { lon, lat } = await this.getCoordsForCityById(cityId);\n\t\treturn this.getWeatherForCityByCoords(lon, lat);\n\t}\n\n\tprivate async getCityAndCountryByCoords(lon: number, lat: number) {\n\t\tconst api = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`;\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst { city, countryCode } = await response.json();\n\t\t\tthis.city = city;\n\t\t\tthis.country = countryCode;\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getCoordsForCityById(cityId: string): Promise<Coords> {\n\t\tconst api = `https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${this.key}`;\n\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst data = await response.json();\n\t\t\tthis.city = data.name;\n\t\t\tthis.country = data.sys.country;\n\t\t\tconst lon: number = data.coord.lon;\n\t\t\tconst lat: number = data.coord.lat;\n\t\t\treturn { lon, lat };\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate hourlyEveryOtherHourLimitTo(hourly: HourlyWeather[], numberOfHours: number) {\n\t\tconst limitedHourly = [];\n\t\tlet everyOtherPointer = 0;\n\t\tfor (let i = 0; i < numberOfHours; i++) {\n\t\t\thourly[everyOtherPointer].temp = Math.round(hourly[everyOtherPointer].temp);\n\t\t\tlimitedHourly.push(hourly[everyOtherPointer]);\n\t\t\teveryOtherPointer += 2;\n\t\t}\n\t\treturn limitedHourly;\n\t}\n}\n\nexport interface IWeather {\n\tname?: string;\n\tcoord?: Coords;\n\tcurrent?: {\n\t\tmax: number;\n\t\tmin: number;\n\t\ttimestamp: number;\n\t\ttemp: number;\n\t\tweather: {\n\t\t\tmain: string;\n\t\t\tdescription: string;\n\t\t\ticon: string;\n\t\t};\n\t};\n\thourly?: HourlyWeather[];\n\tdaily?: DailyWeather[];\n}\n\ntype Coords = {\n\tlon: number;\n\tlat: number;\n};\n\nexport type HourlyWeather = {\n\tdt: number;\n\ttemp: number;\n\tweather: {\n\t\tmain: string;\n\t\ticon: string;\n\t}[];\n};\n\nexport type DailyWeather = {\n\tdt: number;\n\tsunrise: number;\n\tsunset: number;\n\thumidity: number;\n\twind_speed: number;\n\tuvi: number;\n\ttemp: {\n\t\tday: number;\n\t};\n\tweather: {\n\t\tmain: string;\n\t\ticon: string;\n\t}[];\n\tfeels_like: {\n\t\tday: number;\n\t};\n};\n","import { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/weather-context\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: \"0 2rem\",\n\t\tmarginTop: \"1rem\",\n\t},\n\ticon: {\n\t\tmarginLeft: \"-12px\",\n\t},\n});\n\nexport default function Header({ city }: any) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst weatherCtx = useContext(WeatherContext);\n\n\tconst searchIconClickHandler = () => {\n\t\tweatherCtx.clearState();\n\t\thistory.push(\"/\");\n\t};\n\n\treturn (\n\t\t<Grid container alignItems=\"center\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<IconButton aria-label=\"search\" color=\"primary\" className={classes.icon} onClick={searchIconClickHandler}>\n\t\t\t\t\t<Search fontSize=\"large\" />\n\t\t\t\t</IconButton>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"button\">{city}</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Grid, Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\n\ninterface HourlyProps {\n  time: number;\n  temp: number;\n  condition: string;\n  icon: string;\n}\n\nexport default function Hourly({ time, temp, condition, icon }: HourlyProps) {\n  return (\n    <Grid container alignItems=\"center\" direction=\"column\">\n      <Grid item>\n        <Typography>{moment.unix(time).format(\"h A\")}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography>\n          <Box component=\"span\" fontWeight=\"bold\">\n            {temp}\n            <span>&#176;</span>F\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <img src={icon} alt=\"weather icon\" width=\"25\" />\n          </Grid>\n          <Grid item>\n            <Typography>\n              <Box component=\"span\" fontWeight=\"300\">\n                {condition}\n              </Box>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport Hourly from \"./Hourly\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HourlyWeather } from \"../../api/OpenWeatherClient\";\n\nconst useStyles = makeStyles({\n  container: {\n    padding: \"1rem 2rem\",\n  },\n});\n\nexport default function HourlyContainer({\n  hourly,\n}: {\n  hourly: HourlyWeather[];\n}) {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      justifyContent=\"space-between\"\n      className={classes.container}\n    >\n      {hourly.map((hour) => (\n        <Grid item key={hour.dt}>\n          <Hourly\n            time={hour.dt}\n            temp={hour.temp}\n            condition={hour.weather[0].main}\n            icon={`assets/${hour.weather[0].icon}@4x.png`}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import { Box, Grid, Typography } from \"@material-ui/core\";\n\nexport default function TemperatureConditions({\n  temp,\n  high,\n  low,\n  conditions,\n  icon,\n}: any) {\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n    >\n      <Grid item>\n        <Grid container alignItems=\"center\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h1\" color=\"primary\">\n              <Box fontWeight=\"400\">\n                {temp}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h5\" align=\"center\">\n              <Box fontWeight=\"300\">\n                H: {high}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              <Box fontWeight=\"300\">\n                L: {low}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container justifyContent=\"center\" alignItems=\"center\">\n          <Grid item>\n            <img src={icon} alt=\"weather icon\" width=\"100\" />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\" align=\"center\">\n              {conditions}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport DailyDetailsContainer from \"../components/Weather/DailyDetailsContainer\";\nimport Header from \"../components/Weather/Header\";\nimport HourlyContainer from \"../components/Weather/HourlyContainer\";\nimport TemperatureConditions from \"../components/Weather/TemperatureConditions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WeatherContext from \"../store/weather-context\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\theight: \"100%\",\n\t},\n});\n\nexport default function WeatherPage() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst classes = useStyles();\n\treturn weatherCtx.weatherData ? (\n\t\t<Grid container direction=\"column\" wrap=\"nowrap\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<Header city={weatherCtx.weatherData.name}></Header>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<TemperatureConditions\n\t\t\t\t\ttemp={weatherCtx.weatherData.current?.temp}\n\t\t\t\t\tconditions={weatherCtx.weatherData.current?.weather.main}\n\t\t\t\t\thigh={weatherCtx.weatherData.current?.max}\n\t\t\t\t\tlow={weatherCtx.weatherData.current?.min}\n\t\t\t\t\ticon={weatherCtx.weatherData.current?.weather.icon}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<HourlyContainer hourly={weatherCtx.weatherData.hourly || []} />\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DailyDetailsContainer daily={weatherCtx.weatherData.daily || []} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t) : (\n\t\t<Redirect to={{ pathname: \"/\" }} />\n\t);\n}\n","import { Box, Typography, Grid } from \"@material-ui/core\";\n\nexport default function Title() {\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid item>\n        <Typography component=\"h1\" variant=\"h2\" color=\"primary\">\n          <Box fontWeight=\"bold\" component=\"span\">\n            Weather Now\n          </Box>\n        </Typography>\n        <Typography align=\"right\">Powered by OpenWeather API</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport throttle from \"lodash/throttle\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport WeatherContext from \"../../store/weather-context\";\n\nconst useStyles = makeStyles((theme) => ({\n\ticon: {\n\t\tcolor: theme.palette.text.secondary,\n\t\tmarginRight: theme.spacing(2),\n\t},\n\tloading: {\n\t\tcolor: theme.palette.text.secondary,\n\t},\n}));\n\ntype Option = {\n\tmatching_full_name: string;\n\t_links: {\n\t\t\"city:item\": {\n\t\t\thref: string;\n\t\t};\n\t};\n};\n\nexport default function SearchInputAutocomplete() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst classes = useStyles();\n\tconst [inputValue, setInputValue] = useState(\"\");\n\tconst [options, setOptions] = useState<Option[]>([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst getAutoSuggestionData = (request: { input: string }) => {\n\t\twindow\n\t\t\t.fetch(`https://api.teleport.org/api/cities/?search=${request.input}&limit=5`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet newOptions: Option[];\n\t\t\t\tif (data) {\n\t\t\t\t\tnewOptions = [...data._embedded[\"city:search-results\"]];\n\t\t\t\t\tsetOptions(newOptions);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst fetchSuggestions = useMemo(() => throttle(getAutoSuggestionData, 2000), []);\n\n\tReact.useEffect(() => {\n\t\tif (inputValue === \"\") {\n\t\t\tsetOptions([]);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (inputValue.length > 2) {\n\t\t\tsetLoading(true);\n\t\t\tfetchSuggestions({ input: inputValue });\n\t\t}\n\t}, [inputValue, fetchSuggestions]);\n\n\treturn (\n\t\t<Autocomplete\n\t\t\tstyle={{ width: 350 }}\n\t\t\tgetOptionLabel={(option) => option.matching_full_name}\n\t\t\toptions={options}\n\t\t\tloading={loading}\n\t\t\tonChange={(event, newValue) => {\n\t\t\t\tnewValue === null && weatherCtx.setSelectedCityId();\n\t\t\t\tconst cityId = newValue?._links[\"city:item\"].href.split(\":\")[2].replace(\"/\", \"\");\n\t\t\t\tif (cityId) weatherCtx.setSelectedCityId(cityId);\n\t\t\t\tsetOptions(\n\t\t\t\t\tnewValue\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmatching_full_name: newValue.matching_full_name,\n\t\t\t\t\t\t\t\t\t_links: newValue._links,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: options\n\t\t\t\t);\n\t\t\t}}\n\t\t\tonInputChange={(event, newInputValue) => {\n\t\t\t\tsetInputValue(newInputValue);\n\t\t\t}}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\tlabel=\"Start typing city name\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress thickness={4} className={classes.loading} size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\trenderOption={(option) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<LocationOnIcon className={classes.icon} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography>{option.matching_full_name}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import { Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport WeatherContext from \"../../store/weather-context\";\n\nexport default function SearchButton() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst history = useHistory();\n\n\tconst clickHandler = () => {\n\t\tif (weatherCtx.selectedCityId !== undefined) {\n\t\t\tweatherCtx.setLoadingData(true);\n\n\t\t\tweatherCtx.weatherClient\n\t\t\t\t.getWeatherForCityById(weatherCtx.selectedCityId)\n\t\t\t\t.then((data) => weatherCtx.setWeatherData(data))\n\t\t\t\t.then(() => weatherCtx.setLoadingData(false))\n\t\t\t\t.then(() => history.push(\"/weather\"));\n\t\t}\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttype=\"submit\"\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisableElevation\n\t\t\tdisabled={weatherCtx.selectedCityId === undefined}\n\t\t\tonClick={clickHandler}\n\t\t\tendIcon={<Search />}\n\t\t>\n\t\t\tGo\n\t\t</Button>\n\t);\n}\n","import { Button } from \"@material-ui/core\";\nimport { MyLocation } from \"@material-ui/icons\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport WeatherContext from \"../../store/weather-context\";\n\nexport default function UseMyLocationButton() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst history = useHistory();\n\n\tconst useMyLocationHandler = () => {\n\t\tweatherCtx.setLoadingData(true);\n\n\t\tnavigator.geolocation.getCurrentPosition(({ coords }) => {\n\t\t\tweatherCtx.weatherClient\n\t\t\t\t.getWeatherForCityByCoords(coords.longitude, coords.latitude)\n\t\t\t\t.then((data) => weatherCtx.setWeatherData(data))\n\t\t\t\t.then(() => weatherCtx.setLoadingData(false))\n\t\t\t\t.then(() => history.push(\"/weather\"));\n\t\t});\n\t};\n\n\treturn (\n\t\t<Button type=\"submit\" color=\"primary\" disableElevation endIcon={<MyLocation />} onClick={useMyLocationHandler}>\n\t\t\tUse my location\n\t\t</Button>\n\t);\n}\n","import { Grid } from \"@material-ui/core\";\nimport SearchInputAutocomplete from \"./SearchInputAutocomplete\";\nimport SearchButton from \"./SearchButton\";\nimport UseMyLocationButton from \"./UseMyLocationButton\";\n\nexport default function Search() {\n\treturn (\n\t\t<Grid container alignItems=\"flex-end\" direction=\"column\" spacing={3}>\n\t\t\t<Grid item>\n\t\t\t\t<SearchInputAutocomplete />\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container alignItems=\"center\" spacing={2}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<UseMyLocationButton />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<SearchButton />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Backdrop, Box, CircularProgress, Grid } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Title from \"../components/Home/Title\";\nimport Search from \"../components/Home/Search\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../store/weather-context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tgrid: {\n\t\t\theight: \"100%\",\n\t\t},\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t\tbackdropGridItem: {\n\t\t\tpadding: \"0px !important\",\n\t\t},\n\t})\n);\n\nexport default function HomePage() {\n\tconst weatherCtx = useContext(WeatherContext);\n\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container className={classes.grid} justifyContent=\"center\" alignContent=\"center\">\n\t\t\t<Grid item className={classes.backdropGridItem}>\n\t\t\t\t<Backdrop className={classes.backdrop} open={weatherCtx.loadingData || false}>\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t\t</Backdrop>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Title />\n\t\t\t</Grid>\n\t\t\t<Grid container justifyContent=\"center\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Box mt={10}>\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport WeatherPage from \"./pages/WeatherPage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\nimport { WeatherContextProvider } from \"./store/weather-context\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\theight: \"100%\",\n\t},\n});\n\nconst routes = [\n\t{ path: \"/\", name: \"Home\", Component: HomePage },\n\t{ path: \"/weather\", name: \"Weather\", Component: WeatherPage },\n];\nexport default function App() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Container disableGutters className={classes.container}>\n\t\t\t<WeatherContextProvider>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t{routes.map(({ path, Component }) => (\n\t\t\t\t\t\t<Route key={path} exact path={path}>\n\t\t\t\t\t\t\t{({ match }) => (\n\t\t\t\t\t\t\t\t<CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\n\t\t\t\t\t\t\t\t\t<div className=\"page\">\n\t\t\t\t\t\t\t\t\t\t<Grid container justifyContent=\"center\" className={classes.container}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={8} lg={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box boxShadow={24} height=\"100%\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t))}\n\t\t\t\t</Router>\n\t\t\t</WeatherContextProvider>\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}