{"version":3,"sources":["components/Weather/DailyDetails.tsx","components/Weather/Daily.tsx","components/Weather/DailyContainer.tsx","store/weather-context.tsx","api/OpenWeatherClient.tsx","components/Weather/DailyDetailsContainer.tsx","components/Weather/Header.tsx","components/Weather/Hourly.tsx","components/Weather/HourlyContainer.tsx","components/Weather/TemperatureConditions.tsx","pages/WeatherPage.tsx","components/Home/Title.tsx","components/Home/SearchInputAutocomplete.tsx","components/Home/SearchButton.tsx","components/Home/UseMyLocationButton.tsx","components/Home/Search.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","allCaps","textTransform","container","backgroundColor","color","padding","height","paddingTop","DailyDetails","timezoneOffset","description","feelsLike","windSpeed","humidity","uvi","sunrise","sunset","classes","Grid","direction","justifyContent","className","item","Typography","variant","Box","component","fontWeight","Math","round","moment","unix","utc","format","day","active","Daily","timestamp","Date","now","temp","alignItems","pointer","cursor","DailyContainer","daily","selectDayHandler","activeDayIndex","map","index","dt","onClick","e","weatherClient","key","city","country","this","lon","lat","a","api","getCityAndCountryByCoords","fetch","response","json","data","name","timezone_offset","coord","current","max","min","weather","icon","main","hourly","hourlyEveryOtherHourLimitTo","cityId","getCoordsForCityById","getWeatherForCityByCoords","countryCode","sys","numberOfHours","limitedHourly","everyOtherPointer","i","push","WeatherContext","createContext","setSelectedCityId","setWeatherData","weatherData","setLoadingData","status","clearState","WeatherContextProvider","props","useState","selectedCityId","loadingData","context","undefined","Provider","value","children","DailyDetailsContainer","weatherCtx","useContext","activeDay","setActiveDay","setActiveDayIndex","xs","event","feels_like","wind_speed","marginTop","marginLeft","Header","history","useHistory","IconButton","Search","fontSize","Hourly","time","condition","src","alt","width","HourlyContainer","hour","TemperatureConditions","high","low","conditions","spacing","align","Title","theme","palette","text","secondary","marginRight","loading","SearchInputAutocomplete","inputValue","setInputValue","options","setOptions","setLoading","getAutoSuggestionData","request","window","input","then","res","newOptions","_embedded","fetchSuggestions","useMemo","throttle","React","useEffect","length","Autocomplete","style","getOptionLabel","option","matching_full_name","onChange","newValue","_links","href","split","replace","onInputChange","newInputValue","renderInput","params","TextField","label","fullWidth","InputProps","endAdornment","Fragment","CircularProgress","thickness","size","renderOption","SearchButton","Button","type","disableElevation","disabled","getWeatherForCityById","endIcon","UseMyLocationButton","MyLocation","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","createStyles","grid","backdrop","zIndex","drawer","backdropGridItem","routes","path","Component","alignContent","Backdrop","open","mt","wrap","to","pathname","App","Container","disableGutters","basename","process","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","md","lg","boxShadow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e012d2.chunk.js","sourcesContent":["import { Box, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n\tallCaps: {\n\t\ttextTransform: \"uppercase\",\n\t},\n\tcontainer: {\n\t\tbackgroundColor: \"#3f50b5\",\n\t\tcolor: \"white\",\n\t\tpadding: \"1rem 2rem\",\n\t\theight: \"100%\",\n\t\tpaddingTop: \"1.45rem\",\n\t},\n});\nexport default function DailyDetails({\n\ttimezoneOffset,\n\tdescription,\n\tfeelsLike,\n\twindSpeed,\n\thumidity,\n\tuvi,\n\tsunrise,\n\tsunset,\n}: any) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container direction=\"column\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t<Box component=\"span\" className={classes.allCaps} fontWeight=\"400\">\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tFeels like\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{Math.round(feelsLike)}\n\t\t\t\t\t\t<span>&#176;</span>F\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tSunrise\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{moment\n\t\t\t\t\t\t\t.unix(sunrise + timezoneOffset)\n\t\t\t\t\t\t\t.utc()\n\t\t\t\t\t\t\t.format(\"hh:mm a\")}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tSunset\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{moment\n\t\t\t\t\t\t\t.unix(sunset + timezoneOffset)\n\t\t\t\t\t\t\t.utc()\n\t\t\t\t\t\t\t.format(\"hh:mm a\")}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tHumidity\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{humidity}%\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tWind speed\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{windSpeed} mp/h\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\tUVI\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{uvi}\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\ninterface IDailyProps {\n\tactive?: boolean;\n\ttimestamp?: number;\n\ttemp: number;\n}\n\nconst useStyles = makeStyles({\n\tday: {\n\t\tpadding: \"1rem 2rem\",\n\t\tbackgroundColor: (active) => (active ? \"#3f50b5\" : \"\"),\n\t\tcolor: (active) => (active ? \"white\" : \"black\"),\n\t},\n\tallCaps: {\n\t\ttextTransform: \"uppercase\",\n\t},\n});\nexport default function Daily({ active = false, timestamp = Date.now(), temp }: IDailyProps) {\n\tconst classes = useStyles(active);\n\treturn (\n\t\t<Grid container justifyContent=\"space-between\" alignItems=\"center\" className={classes.day}>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t<Box component=\"span\" className={classes.allCaps} fontWeight=\"400\">\n\t\t\t\t\t\t\t\t{moment.unix(timestamp).utc().format(\"ddd\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t<Box component=\"span\" className={classes.allCaps}>\n\t\t\t\t\t\t\t\t{moment.unix(timestamp).utc().format(\"D MMM\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t{Math.round(temp)}\n\t\t\t\t\t<span>&#176;</span>F\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport { DailyWeather } from \"../../api/OpenWeatherClient\";\nimport Daily from \"./Daily\";\n\nconst useStyles = makeStyles({\n\tpointer: {\n\t\tcursor: \"pointer\",\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: \"#dee3ff\",\n\t\t},\n\t},\n});\n\nexport default function DailyContainer({\n\tdaily,\n\tselectDayHandler,\n\tactiveDayIndex,\n}: {\n\tdaily: DailyWeather[];\n\tselectDayHandler: any;\n\tactiveDayIndex: number;\n}) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t{daily.map(({ dt, temp }, index) => (\n\t\t\t\t<Grid item className={classes.pointer} onClick={(e) => selectDayHandler(e, index)} key={dt}>\n\t\t\t\t\t<Daily active={activeDayIndex === index} timestamp={dt} temp={temp.day} />\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n","import { Context, ReactNode, useState } from \"react\";\nimport { createContext } from \"react\";\nimport OpenWeatherClient, { IWeather } from \"../api/OpenWeatherClient\";\n\nconst weatherClient = new OpenWeatherClient(\"a3345aba730886077c25b145c5518740\");\n\nconst WeatherContext: Context<{\n\tweatherClient: OpenWeatherClient;\n\tloadingData?: boolean;\n\tweatherData?: IWeather;\n\tselectedCityId?: string;\n\tsetLoadingData: (status: boolean) => void;\n\tsetSelectedCityId: (cityId?: string) => void;\n\tsetWeatherData: (weatherData: IWeather) => void;\n\tclearState: () => void;\n}> = createContext({\n\tweatherClient,\n\tsetSelectedCityId: (cityId) => {},\n\tsetWeatherData: (weatherData) => {},\n\tsetLoadingData: (status) => {},\n\tclearState: () => {},\n});\n\nexport function WeatherContextProvider(props: { children: ReactNode }) {\n\tconst [weatherData, setWeatherData] = useState<IWeather>();\n\tconst [selectedCityId, setSelectedCityId] = useState<string>();\n\tconst [loadingData, setLoadingData] = useState(false);\n\n\tconst setLoadingDataHandler = (status: boolean) => setLoadingData(status);\n\n\tconst setSelectedCityIdHandler = (cityId?: string) => setSelectedCityId(cityId);\n\n\tconst setWeatherDataHandler = (weatherData: IWeather) => {\n\t\tsetWeatherData(weatherData);\n\t};\n\n\tconst clearStateHandler = () => {\n\t\tsetLoadingData(false);\n\t\tsetSelectedCityId(undefined);\n\t\tsetWeatherData(undefined);\n\t};\n\n\tconst context = {\n\t\tloadingData,\n\t\tweatherClient,\n\t\tweatherData,\n\t\tselectedCityId,\n\t\tsetLoadingData: setLoadingDataHandler,\n\t\tsetSelectedCityId: setSelectedCityIdHandler,\n\t\tsetWeatherData: setWeatherDataHandler,\n\t\tclearState: clearStateHandler,\n\t};\n\n\treturn <WeatherContext.Provider value={context}>{props.children}</WeatherContext.Provider>;\n}\n\nexport default WeatherContext;\n","export default class OpenWeatherClient {\n\tkey: string;\n\tcity: string = \"\";\n\tcountry: string = \"\";\n\n\tconstructor(key: string) {\n\t\tthis.key = key;\n\t}\n\n\tasync getWeatherForCityByCoords(lon: number, lat: number): Promise<IWeather> {\n\t\tconst api = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&&appid=${this.key}&units=imperial`;\n\n\t\tthis.getCityAndCountryByCoords(lon, lat);\n\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst data = await response.json();\n\t\t\treturn {\n\t\t\t\tname: `${this.city}, ${this.country}`,\n\t\t\t\ttimezoneOffset: data.timezone_offset,\n\t\t\t\tcoord: {\n\t\t\t\t\tlat: data.lat,\n\t\t\t\t\tlon: data.lon,\n\t\t\t\t},\n\t\t\t\tcurrent: {\n\t\t\t\t\tmax: Math.round(data.daily[0].temp.max),\n\t\t\t\t\tmin: Math.round(data.daily[0].temp.min),\n\t\t\t\t\ttimestamp: data.current.dt,\n\t\t\t\t\ttemp: Math.round(data.current.temp),\n\t\t\t\t\tweather: {\n\t\t\t\t\t\tdescription: data.current.weather[0].description,\n\t\t\t\t\t\ticon: `assets/${data.current.weather[0].icon}@4x.png`,\n\t\t\t\t\t\tmain: data.current.weather[0].main,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thourly: this.hourlyEveryOtherHourLimitTo(data.hourly, 4),\n\t\t\t\tdaily: data.daily,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync getWeatherForCityById(cityId: string): Promise<IWeather> {\n\t\tconst { lon, lat } = await this.getCoordsForCityById(cityId);\n\t\treturn this.getWeatherForCityByCoords(lon, lat);\n\t}\n\n\tprivate async getCityAndCountryByCoords(lon: number, lat: number) {\n\t\tconst api = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`;\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst { city, countryCode } = await response.json();\n\t\t\tthis.city = city;\n\t\t\tthis.country = countryCode;\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getCoordsForCityById(cityId: string): Promise<Coords> {\n\t\tconst api = `https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${this.key}`;\n\n\t\ttry {\n\t\t\tconst response = await fetch(api);\n\t\t\tconst data = await response.json();\n\t\t\tthis.city = data.name;\n\t\t\tthis.country = data.sys.country;\n\t\t\tconst lon: number = data.coord.lon;\n\t\t\tconst lat: number = data.coord.lat;\n\t\t\treturn { lon, lat };\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate hourlyEveryOtherHourLimitTo(hourly: HourlyWeather[], numberOfHours: number) {\n\t\tconst limitedHourly = [];\n\t\tlet everyOtherPointer = 0;\n\t\tfor (let i = 0; i < numberOfHours; i++) {\n\t\t\thourly[everyOtherPointer].temp = Math.round(hourly[everyOtherPointer].temp);\n\t\t\tlimitedHourly.push(hourly[everyOtherPointer]);\n\t\t\teveryOtherPointer += 2;\n\t\t}\n\t\treturn limitedHourly;\n\t}\n}\n\nexport interface IWeather {\n\tname?: string;\n\tcoord?: Coords;\n\ttimezoneOffset?: number;\n\tcurrent?: {\n\t\tmax: number;\n\t\tmin: number;\n\t\ttimestamp: number;\n\t\ttemp: number;\n\t\tweather: {\n\t\t\tmain: string;\n\t\t\tdescription: string;\n\t\t\ticon: string;\n\t\t};\n\t};\n\thourly?: HourlyWeather[];\n\tdaily?: DailyWeather[];\n}\n\ntype Coords = {\n\tlon: number;\n\tlat: number;\n};\n\nexport type HourlyWeather = {\n\tdt: number;\n\ttemp: number;\n\tweather: {\n\t\tmain: string;\n\t\ticon: string;\n\t}[];\n};\n\nexport type DailyWeather = {\n\tdt: number;\n\tsunrise: number;\n\tsunset: number;\n\thumidity: number;\n\twind_speed: number;\n\tuvi: number;\n\ttemp: {\n\t\tday: number;\n\t};\n\tweather: {\n\t\tmain: string;\n\t\ticon: string;\n\t}[];\n\tfeels_like: {\n\t\tday: number;\n\t};\n};\n","import { Grid } from \"@material-ui/core\";\nimport DailyDetails from \"./DailyDetails\";\nimport DailyContainer from \"./DailyContainer\";\nimport { DailyWeather } from \"../../api/OpenWeatherClient\";\nimport { useContext, useState } from \"react\";\nimport WeatherContext from \"../../store/weather-context\";\n\nexport default function DailyDetailsContainer({ daily }: { daily: DailyWeather[] }) {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst [activeDay, setActiveDay] = useState(daily[0]);\n\tconst [activeDayIndex, setActiveDayIndex] = useState(0);\n\tconst selectDayHandler = (event: any, index: number) => {\n\t\tsetActiveDay(daily[index]);\n\t\tsetActiveDayIndex(index);\n\t};\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<DailyContainer activeDayIndex={activeDayIndex} selectDayHandler={selectDayHandler} daily={daily} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<DailyDetails\n\t\t\t\t\ttimezoneOffset={weatherCtx.weatherData?.timezoneOffset || 0}\n\t\t\t\t\tsunrise={activeDay?.sunrise}\n\t\t\t\t\tsunset={activeDay?.sunset}\n\t\t\t\t\tdescription={activeDay?.weather[0].main}\n\t\t\t\t\tfeelsLike={activeDay?.feels_like.day}\n\t\t\t\t\tuvi={activeDay?.uvi}\n\t\t\t\t\thumidity={activeDay?.humidity}\n\t\t\t\t\twindSpeed={activeDay?.wind_speed}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/weather-context\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: \"0 2rem\",\n\t\tmarginTop: \"1rem\",\n\t},\n\ticon: {\n\t\tmarginLeft: \"-12px\",\n\t},\n});\n\nexport default function Header({ city }: any) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst weatherCtx = useContext(WeatherContext);\n\n\tconst searchIconClickHandler = () => {\n\t\tweatherCtx.clearState();\n\t\thistory.push(\"/\");\n\t};\n\n\treturn (\n\t\t<Grid container alignItems=\"center\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<IconButton aria-label=\"search\" color=\"primary\" className={classes.icon} onClick={searchIconClickHandler}>\n\t\t\t\t\t<Search fontSize=\"large\" />\n\t\t\t\t</IconButton>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"button\">{city}</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Grid, Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\n\ninterface HourlyProps {\n\ttimezoneOffset: number;\n\ttime: number;\n\ttemp: number;\n\tcondition: string;\n\ticon: string;\n}\n\nexport default function Hourly({ timezoneOffset, time, temp, condition, icon }: HourlyProps) {\n\treturn (\n\t\t<Grid container alignItems=\"center\" direction=\"column\">\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t{moment\n\t\t\t\t\t\t.unix(time + timezoneOffset)\n\t\t\t\t\t\t.utc()\n\t\t\t\t\t\t.format(\"h A\")}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Typography>\n\t\t\t\t\t<Box component=\"span\" fontWeight=\"bold\">\n\t\t\t\t\t\t{temp}\n\t\t\t\t\t\t<span>&#176;</span>F\n\t\t\t\t\t</Box>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<img src={icon} alt=\"weather icon\" width=\"25\" />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t<Box component=\"span\" fontWeight=\"300\">\n\t\t\t\t\t\t\t\t{condition}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Grid } from \"@material-ui/core\";\nimport Hourly from \"./Hourly\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HourlyWeather } from \"../../api/OpenWeatherClient\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/weather-context\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: \"1rem 2rem\",\n\t},\n});\n\nexport default function HourlyContainer({ hourly }: { hourly: HourlyWeather[] }) {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container justifyContent=\"space-between\" className={classes.container}>\n\t\t\t{hourly.map((hour) => (\n\t\t\t\t<Grid item key={hour.dt}>\n\t\t\t\t\t<Hourly\n\t\t\t\t\t\ttimezoneOffset={weatherCtx.weatherData?.timezoneOffset || 0}\n\t\t\t\t\t\ttime={hour.dt}\n\t\t\t\t\t\ttemp={hour.temp}\n\t\t\t\t\t\tcondition={hour.weather[0].main}\n\t\t\t\t\t\ticon={`assets/${hour.weather[0].icon}@4x.png`}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n","import { Box, Grid, Typography } from \"@material-ui/core\";\n\nexport default function TemperatureConditions({\n  temp,\n  high,\n  low,\n  conditions,\n  icon,\n}: any) {\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n    >\n      <Grid item>\n        <Grid container alignItems=\"center\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h1\" color=\"primary\">\n              <Box fontWeight=\"400\">\n                {temp}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h5\" align=\"center\">\n              <Box fontWeight=\"300\">\n                H: {high}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              <Box fontWeight=\"300\">\n                L: {low}\n                <span>&#176;</span>F\n              </Box>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container justifyContent=\"center\" alignItems=\"center\">\n          <Grid item>\n            <img src={icon} alt=\"weather icon\" width=\"100\" />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h4\" align=\"center\">\n              {conditions}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport DailyDetailsContainer from \"../components/Weather/DailyDetailsContainer\";\nimport Header from \"../components/Weather/Header\";\nimport HourlyContainer from \"../components/Weather/HourlyContainer\";\nimport TemperatureConditions from \"../components/Weather/TemperatureConditions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WeatherContext from \"../store/weather-context\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\theight: \"100%\",\n\t},\n});\n\nexport default function WeatherPage() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst classes = useStyles();\n\treturn weatherCtx.weatherData ? (\n\t\t<Grid container direction=\"column\" wrap=\"nowrap\" justifyContent=\"space-between\" className={classes.container}>\n\t\t\t<Grid item>\n\t\t\t\t<Header city={weatherCtx.weatherData.name}></Header>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<TemperatureConditions\n\t\t\t\t\ttemp={weatherCtx.weatherData.current?.temp}\n\t\t\t\t\tconditions={weatherCtx.weatherData.current?.weather.main}\n\t\t\t\t\thigh={weatherCtx.weatherData.current?.max}\n\t\t\t\t\tlow={weatherCtx.weatherData.current?.min}\n\t\t\t\t\ticon={weatherCtx.weatherData.current?.weather.icon}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<HourlyContainer hourly={weatherCtx.weatherData.hourly || []} />\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DailyDetailsContainer daily={weatherCtx.weatherData.daily || []} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t) : (\n\t\t<Redirect to={{ pathname: \"/\" }} />\n\t);\n}\n","import { Box, Typography, Grid } from \"@material-ui/core\";\n\nexport default function Title() {\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid item>\n        <Typography component=\"h1\" variant=\"h2\" color=\"primary\">\n          <Box fontWeight=\"bold\" component=\"span\">\n            Weather Now\n          </Box>\n        </Typography>\n        <Typography align=\"right\">Powered by OpenWeather API</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useMemo, useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport throttle from \"lodash/throttle\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport WeatherContext from \"../../store/weather-context\";\n\nconst useStyles = makeStyles((theme) => ({\n\ticon: {\n\t\tcolor: theme.palette.text.secondary,\n\t\tmarginRight: theme.spacing(2),\n\t},\n\tloading: {\n\t\tcolor: theme.palette.text.secondary,\n\t},\n}));\n\ntype Option = {\n\tmatching_full_name: string;\n\t_links: {\n\t\t\"city:item\": {\n\t\t\thref: string;\n\t\t};\n\t};\n};\n\nexport default function SearchInputAutocomplete() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst classes = useStyles();\n\tconst [inputValue, setInputValue] = useState(\"\");\n\tconst [options, setOptions] = useState<Option[]>([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst getAutoSuggestionData = (request: { input: string }) => {\n\t\twindow\n\t\t\t.fetch(`https://api.teleport.org/api/cities/?search=${request.input}&limit=5`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet newOptions: Option[];\n\t\t\t\tif (data) {\n\t\t\t\t\tnewOptions = [...data._embedded[\"city:search-results\"]];\n\t\t\t\t\tsetOptions(newOptions);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst fetchSuggestions = useMemo(() => throttle(getAutoSuggestionData, 2000), []);\n\n\tReact.useEffect(() => {\n\t\tif (inputValue === \"\") {\n\t\t\tsetOptions([]);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (inputValue.length > 2) {\n\t\t\tsetLoading(true);\n\t\t\tfetchSuggestions({ input: inputValue });\n\t\t}\n\t}, [inputValue, fetchSuggestions]);\n\n\treturn (\n\t\t<Autocomplete\n\t\t\tstyle={{ width: 350 }}\n\t\t\tgetOptionLabel={(option) => option.matching_full_name}\n\t\t\toptions={options}\n\t\t\tloading={loading}\n\t\t\tonChange={(event, newValue) => {\n\t\t\t\tnewValue === null && weatherCtx.setSelectedCityId();\n\t\t\t\tconst cityId = newValue?._links[\"city:item\"].href.split(\":\")[2].replace(\"/\", \"\");\n\t\t\t\tif (cityId) weatherCtx.setSelectedCityId(cityId);\n\t\t\t\tsetOptions(\n\t\t\t\t\tnewValue\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmatching_full_name: newValue.matching_full_name,\n\t\t\t\t\t\t\t\t\t_links: newValue._links,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: options\n\t\t\t\t);\n\t\t\t}}\n\t\t\tonInputChange={(event, newInputValue) => {\n\t\t\t\tsetInputValue(newInputValue);\n\t\t\t}}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\tlabel=\"Start typing city name\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress thickness={4} className={classes.loading} size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\trenderOption={(option) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<LocationOnIcon className={classes.icon} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography>{option.matching_full_name}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import { Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport WeatherContext from \"../../store/weather-context\";\n\nexport default function SearchButton() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst history = useHistory();\n\n\tconst clickHandler = () => {\n\t\tif (weatherCtx.selectedCityId !== undefined) {\n\t\t\tweatherCtx.setLoadingData(true);\n\n\t\t\tweatherCtx.weatherClient\n\t\t\t\t.getWeatherForCityById(weatherCtx.selectedCityId)\n\t\t\t\t.then((data) => weatherCtx.setWeatherData(data))\n\t\t\t\t.then(() => weatherCtx.setLoadingData(false))\n\t\t\t\t.then(() => history.push(\"/weather\"));\n\t\t}\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttype=\"submit\"\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisableElevation\n\t\t\tdisabled={weatherCtx.selectedCityId === undefined}\n\t\t\tonClick={clickHandler}\n\t\t\tendIcon={<Search />}\n\t\t>\n\t\t\tGo\n\t\t</Button>\n\t);\n}\n","import { Button } from \"@material-ui/core\";\nimport { MyLocation } from \"@material-ui/icons\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport WeatherContext from \"../../store/weather-context\";\n\nexport default function UseMyLocationButton() {\n\tconst weatherCtx = useContext(WeatherContext);\n\tconst history = useHistory();\n\n\tconst useMyLocationHandler = () => {\n\t\tweatherCtx.setLoadingData(true);\n\n\t\tnavigator.geolocation.getCurrentPosition(({ coords }) => {\n\t\t\tweatherCtx.weatherClient\n\t\t\t\t.getWeatherForCityByCoords(coords.longitude, coords.latitude)\n\t\t\t\t.then((data) => weatherCtx.setWeatherData(data))\n\t\t\t\t.then(() => weatherCtx.setLoadingData(false))\n\t\t\t\t.then(() => history.push(\"/weather\"));\n\t\t});\n\t};\n\n\treturn (\n\t\t<Button type=\"submit\" color=\"primary\" disableElevation endIcon={<MyLocation />} onClick={useMyLocationHandler}>\n\t\t\tUse my location\n\t\t</Button>\n\t);\n}\n","import { Grid } from \"@material-ui/core\";\nimport SearchInputAutocomplete from \"./SearchInputAutocomplete\";\nimport SearchButton from \"./SearchButton\";\nimport UseMyLocationButton from \"./UseMyLocationButton\";\n\nexport default function Search() {\n\treturn (\n\t\t<Grid container alignItems=\"flex-end\" direction=\"column\" spacing={3}>\n\t\t\t<Grid item>\n\t\t\t\t<SearchInputAutocomplete />\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container alignItems=\"center\" spacing={2}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<UseMyLocationButton />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<SearchButton />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Backdrop, Box, CircularProgress, Grid } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Title from \"../components/Home/Title\";\nimport Search from \"../components/Home/Search\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../store/weather-context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tgrid: {\n\t\t\theight: \"100%\",\n\t\t},\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t\tbackdropGridItem: {\n\t\t\tpadding: \"0px !important\",\n\t\t},\n\t})\n);\n\nexport default function HomePage() {\n\tconst weatherCtx = useContext(WeatherContext);\n\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container className={classes.grid} justifyContent=\"center\" alignContent=\"center\">\n\t\t\t<Grid item className={classes.backdropGridItem}>\n\t\t\t\t<Backdrop className={classes.backdrop} open={weatherCtx.loadingData || false}>\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t\t</Backdrop>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Title />\n\t\t\t</Grid>\n\t\t\t<Grid container justifyContent=\"center\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Box mt={10}>\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport WeatherPage from \"./pages/WeatherPage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\nimport { WeatherContextProvider } from \"./store/weather-context\";\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\theight: \"100%\",\n\t},\n});\n\nconst routes = [\n\t{ path: \"/\", name: \"Home\", Component: HomePage },\n\t{ path: \"/weather\", name: \"Weather\", Component: WeatherPage },\n];\nexport default function App() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Container disableGutters className={classes.container}>\n\t\t\t<WeatherContextProvider>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t{routes.map(({ path, Component }) => (\n\t\t\t\t\t\t<Route key={path} exact path={path}>\n\t\t\t\t\t\t\t{({ match }) => (\n\t\t\t\t\t\t\t\t<CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\n\t\t\t\t\t\t\t\t\t<div className=\"page\">\n\t\t\t\t\t\t\t\t\t\t<Grid container justifyContent=\"center\" className={classes.container}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={8} lg={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box boxShadow={24} height=\"100%\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t))}\n\t\t\t\t</Router>\n\t\t\t</WeatherContextProvider>\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}